/**
  ******************************************************************************
  * @file    main.c
  * @author  Ac6
  * @version V1.0
  * @date    01-December-2013
  * @brief   Default main function.
  ******************************************************************************
*/


#include "stm32f0xx.h"
#include "stm32f0_discovery.h"
			

//extern autotest(void); Consider removing because no autotest.o file was given
void setup_gpio();

int  rdir=1,gdir=1,bdir=1;

void tim1_init(void){
	setup_gpio();
	RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;
	//Set the prescaler so that its output is exactly 2 MHz
	//=> PWM freq = CK_INT / (PSC + 1) / (ARR + 1)
	TIM1->PSC = 24-1;
	TIM1->CR1 &= (~(TIM_CR1_DIR) | ~(TIM_CR1_CMS)); //Clear values, results in upcounter edge aligned mode

	//PWM Frequency = 1000Hz
	TIM1->ARR = 2000-1;

	//Channel 1 (PWM = 6%) //Blue
	//Duty Cycle PWM duty cycle = CCRx / (ARR + 1) = 120/2000
	TIM1->CCR1 = 1; //120
	TIM1->CCMR1 |= TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1| TIM_CCMR1_OC1PE;
	TIM1->CCER |= TIM_CCER_CC1E;

	//Channel 2 //Green
	TIM1->CCR2 = 6; //667
	TIM1->CCMR1 |= TIM_CCMR1_OC2M_2 | TIM_CCMR1_OC2M_1| TIM_CCMR1_OC2PE;
	TIM1->CCER |= TIM_CCER_CC2E;

	//Channel 3 //Red
	TIM1->CCR3 = 1; //1333
	TIM1->CCMR2 |= TIM_CCMR2_OC3M_2 | TIM_CCMR2_OC3M_1| TIM_CCMR2_OC3PE;
	TIM1->CCER |= TIM_CCER_CC3E;

	//Initialize for
	TIM1->BDTR |= TIM_BDTR_MOE;
	TIM1->CR1 |= TIM_CR1_CEN; //Enable timer.
}


//Lab 7 GPIO init
void setup_gpio() {
	/* Student code goes here */
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
	GPIOA->MODER &= ~0x3f0000;
	GPIOA->MODER |= 0x2A0000; //Alternate function code.
	GPIOA->AFR[1] &= ~0xfff;
	GPIOA->AFR[1] |= 0x222;
}


void tim3_init(void){
	RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
	TIM3->CR1 &= (~(TIM_CR1_DIR) | ~(TIM_CR1_CMS)); //Clear values and set to desired values
	//Generates interrupt 500hz.
	TIM3->PSC = 48000-1;
	TIM3->ARR = 2-1;

	//Enable Interrupt
	NVIC->ISER[0] |= (1<<TIM3_IRQn);
	//Start timer
	TIM3->DIER |= TIM_DIER_UIE;
	TIM3->CR1 |= TIM_CR1_CEN;

}


int main(void) {
	//autotest();
	tim1_init();
	tim3_init();
	while(1) asm("wfi");
	return 0;
}
